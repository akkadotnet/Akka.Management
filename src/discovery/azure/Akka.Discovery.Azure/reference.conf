######################################################
# Akka Service Discovery Azure Config                  #
######################################################

akka.discovery {
  # Set the following in your application.conf if you want to use this discovery mechanism:
  # method = azure
  azure {
    class = "Akka.Discovery.Azure.AzureServiceDiscovery, Akka.Discovery.Azure"

    # If set to true, the extension will not participate in updating the Azure table.
    # Only need to be set to true if the extension is being used by a read only extension 
    # such as ClusterClient contact discovery.
    read-only = false
    
    # The public facing IP/host of this node
    # akka.remote.dot-netty.tcp.public-hostname is used if not overriden or empty.
    # if akka.remote.dot-netty.tcp.public-hostname is empty, Dns.GetHostName is used.
    public-hostname = ""
    
    # The public open akka management port of this node 
    # The value will need to be from 1 to 65535, auto-assign port (0) is not supported.
    public-port = 8558

    # The service name assigned to the cluster.
    service-name = "default"
    
    # The connection string used to connect to Azure Table hosting the cluster membership table
    # MANDATORY FIELD: MUST be provided, else the discovery plugin WILL throw an exception.
    connection-string = "<connection-string>"
    
    # The azure table name used to store cluster membership entries
    table-name = "akkaclustermembers"
    
    # The time-to-live heartbeat update interval, defaults to 1 minute 
    ttl-heartbeat-interval = 1m
    
    # The threshold for a cluster member entry to be considered stale
    # Override this value by providing a value greater than ttl-heartbeat-interval
    # If set to 0, this will uses the value (ttl-heartbeat-interval * 5)
    # If set to a value less than ttl-heartbeat-interval, discovery WILL throw an exception
    stale-ttl-threshold = 0
    
    # the stale data pruning interval, defaults to 1 hour
    prune-interval = 1h
    
    # The timeout period for all Azure Tables API HTTP operation, must be greater than zero, defaults to 10 seconds
    operation-timeout = 10s
    
    # The retry backoff for all HTTP operation, must be greater than zero, defaults to 500 milliseconds
    retry-backoff = 500ms
    
    # The maximum retry backoff for all HTTP operations, must be greater than retry-backoff, defaults to 5 seconds
    max-retry-backoff = 5s
  }
}
